<Window x:Class="KinderArtikelBoerse.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KinderArtikelBoerse"
        xmlns:utils="clr-namespace:KinderArtikelBoerse.Utils"
        xmlns:contracts="clr-namespace:KinderArtikelBoerse.Contracts"
        xmlns:vm="clr-namespace:KinderArtikelBoerse.Viewmodels"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
        mc:Ignorable="d"
        AllowDrop="True"
        Drop="Window_Drop"
        Title="{Binding ToolTitle}" Height="600" Width="1000">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <utils:SoldColorConverter x:Key="SoldColorBrush"/>
       
        <DataTemplate x:Key="ItemTemplate" DataType="{x:Type contracts:ISellable}">
            <Border Height="50" Width="350" BorderThickness="2">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Setters>
                            <Setter Property="BorderBrush" Value="LightGray"/>
                        </Style.Setters>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSold}" Value="True">
                                <Setter Property="BorderBrush" Value="Green"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid Background="#01000000">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="300" />
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <i:Interaction.Behaviors>
                        <utils:EventCommandBehavior Event="PreviewKeyDown" PassArguments="True" Command="{Binding SoldToggleCommand}" />
                    </i:Interaction.Behaviors>
                    <TextBlock Foreground="White" Text="{Binding ItemIdentifier}" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        <TextBlock Foreground="White" Text="{Binding Description}" HorizontalAlignment="Left" VerticalAlignment="Bottom" />
                        <TextBlock Foreground="White" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} {1}">
                                    <Binding Path="FirstName" />
                                    <Binding Path="Name" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>

                        <Border HorizontalAlignment="Right" VerticalAlignment="Top" Width="80" Margin="0,2,0,0" CornerRadius="13" Height="26" >
                            <TextBlock Foreground="White" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                   Text="{Binding Price, StringFormat=C}" />
                            <Border.Style >
                                <Style TargetType="{x:Type Border}">
                                    <Style.Setters>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Style.Setters>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSold}" Value="True">
                                            <Setter Property="Background" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>

                            </Border.Style>
                        </Border>
                    <ToggleButton Grid.Column="2" x:Name="IsSoldToggleButton" Content="$" IsChecked="{Binding IsSold}" 
                                          Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}, Path=DataContext.SellCommand}" 
                                          CommandParameter="{Binding Path=.}" >
                        <!--<i:Interaction.Behaviors>
                            <utils:EventCommandBehavior Event="Checked" 
                   Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}, Mode=FindAncestor}, Path=DataContext.RefreshCollectionViewCommand}" />
                           
                        </i:Interaction.Behaviors>-->

                    </ToggleButton>
                </Grid>
               
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="SellerStatisticsItemTemplate" DataType="{x:Type vm:SellerStatisticsViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="50"/>
                </Grid.ColumnDefinitions>
                <TextBlock >
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} {1}">
                            <Binding Path="Seller.FirstName" />
                            <Binding Path="Seller.Name" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>

                <TextBlock Grid.Column="2">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0}/{1}">
                            <Binding Path="SoldItems" />
                            <Binding Path="TotalItems" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <TabControl>
            <TabItem Header="Excel erzeugen">
                <StackPanel Orientation="Vertical" Margin="10" >
                    <TextBlock Text="Input: Verkäufer Liste in Excel" FontWeight="Bold"/>
                    <TextBox x:Name="SellerExcelFilePathTextBox" Text="{Binding SellerExcelFilePath, UpdateSourceTrigger=PropertyChanged}"/>

                    <TextBlock Text="Input: Excel Schablone pro Verkäufer" Margin="0,10,0,0" FontWeight="Bold"/>
                    <TextBox x:Name="SellerExcelTemplateFilePathTextBox" Text="{Binding TemplateFilePath, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock Text="Output: Name des Börsen Excel File:" Margin="0,20,0,0" FontWeight="Bold"/>
                    <TextBox x:Name="ExcelWorkBookNameTextBox" Text="{Binding OutputFileName, UpdateSourceTrigger=PropertyChanged}"/>
                    <Button Margin="0,20,0,0"
                        Content="Börsen Excel generieren" Command="{Binding CreateExcelCommand}" CommandParameter="{Binding ElementName=SellerExcelFilePathTextBox, Path=Text}"/>
                    <TextBlock Text="{Binding Result}" Foreground="Red" FontSize="20" />


                </StackPanel>
            </TabItem>
            <TabItem Header="Tools (Giuli Hacks)">
                <StackPanel Orientation="Vertical">
                    <TextBox x:Name="ItemsListFix" Text="Pfad_zu_Artikellisten_Ordner" Margin="0,20,0,0"/>
                    <Button Margin="0,10,0,0" Content="Fix Artikellisten" Command="{Binding FixItemExcelCommand}" CommandParameter="{Binding ElementName=ItemsListFix, Path=Text}"/>
                </StackPanel>
            </TabItem>
            <TabItem Header="Import/Export Excel" >
                <StackPanel Orientation="Vertical" Margin="10" AllowDrop="True">
                    <i:Interaction.Behaviors>
                        <utils:EventCommandBehavior Command="{Binding }"></utils:EventCommandBehavior>
                    </i:Interaction.Behaviors>
                    
                    <TextBlock Text="Input: Verkäufer Liste in Excel" FontWeight="Bold"/>
                    <TextBox Text="{Binding InputFilePath, UpdateSourceTrigger=PropertyChanged}"/>
                    <Button Content="Einlesen" Command="{Binding ReadExcelCommand}"/>
                    
                    
                </StackPanel>
            </TabItem>
            <TabItem Header="Kasse">
                <Grid Background="Black">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <ContentControl HorizontalAlignment="Left" ContentTemplate="{StaticResource ItemTemplate}" Content="{Binding SearchItem}" />

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Auto Complete Box" />

                    <StackPanel Grid.Row="2"  Orientation="Horizontal">
                        <controls:AutoCompleteBox 
                                Width="300"
                                x:Name="AutoCompleteBox"
                                IsTextCompletionEnabled="False"
                                ItemsSource ="{Binding Items, Mode=OneWay}"
                                SelectedItem="{Binding SearchItem, Mode=TwoWay}"
                                Text="{Binding SearchItemText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                ItemFilter="{Binding SearchItemFilter, Mode=OneWay}"
                                ValueMemberPath="ItemIdentifier"
                                ItemTemplate="{StaticResource ItemTemplate}"
                                MaxDropDownHeight="600"
                            />
                        <!--<ToggleButton x:Name="IsSoldToggleButton" Content="Sold" IsChecked="{Binding SearchItem.IsSold}" />-->
                    </StackPanel>

                    <TextBlock Grid.Row="1" Grid.Column="1" Text="Collection View + Live Filter" />
                    <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding SearchItemText,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <ListView Grid.Row="3" Grid.Column="1" 
                              Background="Black"
                                  SelectedItem="{Binding SearchItem}"
                                  ItemsSource="{Binding Items}" 
                                  ItemTemplate="{StaticResource ItemTemplate}" >

                    </ListView>
                    <!--<ListView Grid.Row="3" Grid.Column="0" ItemsSource="{Binding SellerViewModels}" SelectedItem="{Binding SelectedSellerViewModel}">
                            
                        </ListView>

                        <ListView Grid.Row="3" Grid.Column="1" DataContext="{Binding SelectedSellerViewModel}" ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItemViewModel}">

                        </ListView>-->

                </Grid>
            </TabItem>
            <TabItem Header="Statistics">
                <ListView 
                    ItemsSource="{Binding SellerStatistics}"
                    ItemTemplate="{StaticResource SellerStatisticsItemTemplate}">

                </ListView>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
